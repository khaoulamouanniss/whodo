{
  "_from": "jwt-decode",
  "_id": "jwt-decode@3.1.2",
  "_inBundle": false,
  "_integrity": "sha512-UfpWE/VZn0iP50d8cz9NrZLM9lSWhcJ+0Gt/nm4by88UL+J1SiKN8/5dkjMmbEzwL2CAe+67GsegCbIKtbp75A==",
  "_location": "/jwt-decode",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "jwt-decode",
    "fetchSpec": "latest",
    "name": "jwt-decode",
    "raw": "jwt-decode",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jwt-decode/-/jwt-decode-3.1.2.tgz",
  "_shasum": "3fb319f3675a2df0c2895c8f5e9fa4b67b04ed59",
  "_shrinkwrap": null,
  "_spec": "jwt-decode",
  "_where": "/home/khaoula/lighthouse/whodo/server",
  "author": {
    "email": "jfromaniello@gmail.com",
    "name": "Jose F. Romaniello",
    "url": "http://joseoncode.com"
  },
  "bugs": {
    "url": "https://github.com/auth0/jwt-decode/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Sam Bellen",
      "email": "sam.bellen@auth0.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Decode JWT tokens, mostly useful for browser applications.",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^15.0.0",
    "@rollup/plugin-node-resolve": "^9.0.0",
    "expect.js": "~0.2.0",
    "mocha": "^8.1.3",
    "rimraf": "^2.2.8",
    "rollup": "^2.26.11",
    "rollup-plugin-livereload": "^2.0.0",
    "rollup-plugin-serve": "^1.0.4",
    "rollup-plugin-sourcemaps": "^0.6.2",
    "rollup-plugin-terser": "^7.0.2",
    "uglify-js": "^2.8.29"
  },
  "files": [
    "build/",
    "index.d.ts"
  ],
  "homepage": "https://github.com/auth0/jwt-decode#readme",
  "keywords": [
    "browser",
    "jwt"
  ],
  "license": "MIT",
  "main": "build/jwt-decode.cjs.js",
  "module": "build/jwt-decode.esm.js",
  "name": "jwt-decode",
  "optionalDependencies": {},
  "readme": "## **jwt-decode** is a small browser library that helps decoding JWTs token which are Base64Url encoded.\n\n**IMPORTANT:** This library doesn't validate the token, any well formed JWT can be decoded. You should validate the token in your server-side logic by using something like [express-jwt](https://github.com/auth0/express-jwt), [koa-jwt](https://github.com/stiang/koa-jwt), [Owin Bearer JWT](https://github.com/michaelnoonan/Auth0-Owin-JwtBearerAuthentication), etc.\n\n---\n\n**Warning: When upgrading from version `2` to `3`, there's a potentially breaking change**\n\nIf you've previously imported the library as `import * as jwt_decode from 'jwt-decode'`, you'll have to change your import to `import jwt_decode from 'jwt-decode';`.\n\n---\n\n## Installation\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fauth0%2Fjwt-decode.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fauth0%2Fjwt-decode?ref=badge_shield)\n\n\nInstall with NPM or Yarn.\n\nRun `npm install jwt-decode` or `yarn add jwt-decode` to install the library.\n\n## Usage\n\n```javascript\nimport jwt_decode from \"jwt-decode\";\n\nvar token = \"eyJ0eXAiO.../// jwt token\";\nvar decoded = jwt_decode(token);\n\nconsole.log(decoded);\n\n/* prints:\n * { foo: \"bar\",\n *   exp: 1393286893,\n *   iat: 1393268893  }\n */\n\n// decode header by passing in options (useful for when you need `kid` to verify a JWT):\nvar decodedHeader = jwt_decode(token, { header: true });\nconsole.log(decodedHeader);\n\n/* prints:\n * { typ: \"JWT\",\n *   alg: \"HS256\" }\n */\n```\n\n**Note:** A falsy or malformed token will throw an `InvalidTokenError` error.\n\n## Use as a CommonJS package\n\n```javascript\nconst jwt_decode = require('jwt-decode');\n...\n```\n\n## Include with a script tag\n\nCopy the file `jwt-decode.js` from the `build/` folder to your project somewhere, then include like so:\n\n```html\n<script src=\"jwt-decode.js\"></script>\n```\n\n## Older versions\n\nIf you want to use the library trough Bower, an HTML import, use [version `v2.2.0`](https://github.com/auth0/jwt-decode/tree/v2.2.0). It has the same functionality.\n\n## Develop\n\nRun `npm run dev`, this will fire up a browser and watch the `/lib` folder.\n\n## Issue Reporting\n\nIf you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n## Author\n\n[Auth0](https://auth0.com)\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE) file for more info.\n\n[browserify]: http://browserify.org\n[webpack]: http://webpack.github.io/\n\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fauth0%2Fjwt-decode.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fauth0%2Fjwt-decode?ref=badge_large)\n=======\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/auth0/jwt-decode.git"
  },
  "scripts": {
    "build": "rimraf build && rollup -m -c --environment NODE_ENV:production",
    "dev": "rollup -m -c",
    "test": "mocha"
  },
  "types": "index.d.ts",
  "url": "https://github.com/auth0/jwt-decode/issues",
  "version": "3.1.2"
}
